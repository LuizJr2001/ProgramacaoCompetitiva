#include <iostream>
#include <set>

int main() {
    // Inserir elementos
    std::set<int> mySet;
    mySet.insert(5);
    mySet.insert(2);
    mySet.insert(8);

    // Remover elementos
    mySet.erase(2);
    // Remover todos os elementos
    mySet.clear();

    // Verificar a existência de um elemento
    std::set<int> mySet2 = {5, 2, 8};
    if (mySet2.find(5) != mySet2.end()) {
        std::cout << "O elemento 5 está presente no conjunto." << std::endl;
    }

    // Acessar elementos
    for (auto it = mySet2.begin(); it != mySet2.end(); ++it) {
        std::cout << *it << " ";
    }
    std::cout << std::endl;

    // Obter o tamanho do conjunto
    std::cout << "Tamanho do conjunto: " << mySet2.size() << std::endl;

    // Verificar se o conjunto está vazio
    if (mySet2.empty()) {
        std::cout << "O conjunto está vazio." << std::endl;
    } else {
        std::cout << "O conjunto não está vazio." << std::endl;
    }

    // Trocar conteúdo de conjuntos
    std::set<int> mySet3 = {5, 2, 8};
    std::set<int> mySet4 = {1, 3, 7};
    mySet3.swap(mySet4);

    // Criando um std::set e inserindo alguns elementos
    std::set<int> mySet1 = {1, 2, 3, 4, 5};

    // Verificando se um determinado elemento está no conjunto
    int value = 3;
    if (mySet1.count(value)) {
        std::cout << "O valor " << value << " está presente no conjunto." << std::endl;
    } else {
        std::cout << "O valor " << value << " não está presente no conjunto." << std::endl;
    }

    return 0;
}

